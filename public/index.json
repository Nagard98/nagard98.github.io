
[{"content":"\rGithub Repository\rA DX11 real-time renderer developed as a way to experiment with interesting rendering and engine features. Uses a Render Graph to ease the implemenentation of new features by automatically managing transient resources (currently only textures, not constant buffers). One of the main features is the presence of multiple subsurface scattering techniques. Planning to also integrate a DX12 backend.\nSubsurface Scattering #\rMultiple subsurface scattering techniques are supported, specifically:\nJimenez Gaussian [Jim09] Jimenez Separable [Jim15] Golubev [Gol18] Golubev Plus (an extension developed during my thesis that improves performance) ","date":"18 September 2024","externalUrl":null,"permalink":"/projects/zorya-renderer/","section":"Projects","summary":"A DX11 real-time renderer developed as a way to experiment with interesting rendering and engine features. Uses a \u003cstrong\u003eRender Graph\u003c/strong\u003e to ease the implemenentation of new features by automatically managing transient resources. One of the main features is the presence of multiple \u003cstrong\u003esubsurface scattering\u003c/strong\u003e techniques. Planning to also integrate a DX12 backend.","title":"Zorya Renderer","type":"projects"},{"content":"\nGithub Repository\rExergame developed in Unity during my internship at the HCI Lab of the University of Udine. The game was initially designed for old mobile devices and my job was to implement it with current technolgies and add support for a VR headset and treadmill, allowing for full body movement.\nThe main point of the project was to convert a 2D exergame developed by Prof. Buttussi and Prof. Chittaro in 2010 for smartphones to a modern version. Actually there are two versions, one for use with \u0026ldquo;normal\u0026rdquo; HIDs (with the main game loop being a rythm game), while the other one uses a KAT VR Treadmill. These two versions have their own branches in this repository.\nStandard version of the game VR version of the game The objective of the game is to make the user keep the \u0026ldquo;right\u0026rdquo; pace by using a reward system. The rewards and the \u0026ldquo;punishments\u0026rdquo; are determined by the average page during a certain section. Specifically:\nif the users pace is below the average range, spawn some gold coins that will disappear if the user doesn\u0026rsquo;t speed up if the users pace is inside the average range, spawn potions or shields if the users pace is above the average range, spawn some monsters along the road. If the user doesn\u0026rsquo;t slow down he will take damage, unless he has an adequate shield. When something spawns, in the standard version an alert appears on screen. For the VR version, instead, a text-to-speech service is used for the alerts.\nThe running path is procedurally generated. In the standard version of the game the character is on a rail and follows the path, with the speed beeing influenced by how good you are being at the rythm game. In the VR mode, of course, you have complete control of the character through the use of the treadmill.\n","date":"19 September 2024","externalUrl":null,"permalink":"/projects/monsters-and-gold/","section":"Projects","summary":"Exergame developed in Unity during my internship at the HCI Lab of the University of Udine. The game was initially designed for old mobile devices and my job was to implement it with current technolgies and add support for a \u003cstrong\u003eVR headset\u003c/strong\u003e and \u003cstrong\u003etreadmill\u003c/strong\u003e, allowing for full body movement.","title":"Monsters \u0026 Gold","type":"projects"},{"content":"\rGithub Repository\r","date":"19 September 2024","externalUrl":null,"permalink":"/projects/approx-mvbb/","section":"Projects","summary":"Tool for computing and visualizing an approximate Minimum Volume Bounding Box (MVBB) given a 3D Model. The algorithm is based on the \u0026lsquo;\u0026rsquo;\u003cstrong\u003eEfficiently Approximating the Minimum-Volume Bounding Box of a Point Set in Three Dimensions\u003c/strong\u003e\u0026rsquo;\u0026rsquo; paper from Barequet and Har-Peled. For some internal algorithms I used those provided with the CGAL library.","title":"Approximate MVBB Visualizer","type":"projects"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/dart/","section":"Tags","summary":"","title":"Dart","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/flutter/","section":"Tags","summary":"","title":"Flutter","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/","section":"Nagard98","summary":"","title":"Nagard98","type":"page"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"\rGithub Repository\rPrototype of an application for managing your own wardrobe and sharing it with other users. You can create your own outfits from single clothing items or add directly those created by other users. There is also a badge system for users that share the most popular outfits.\nDeveloped with the Flutter framework, allowing for easy distribution on multiple different platforms.\n","date":"19 September 2024","externalUrl":null,"permalink":"/projects/wardrobe-geek/","section":"Projects","summary":"Prototype of an application for managing your own wardrobe and sharing it with other users. You can create your own outfits from single clothing items or add directly those created by other users. There is also a badge system for users that share the most popular outfits.","title":"Wardrobe Geek","type":"projects"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/c++/","section":"Tags","summary":"","title":"C++","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/cgal/","section":"Tags","summary":"","title":"CGAL","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/computational-geometry/","section":"Tags","summary":"","title":"Computational Geometry","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/qt/","section":"Tags","summary":"","title":"Qt","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/c%23/","section":"Tags","summary":"","title":"C#","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/treadmill/","section":"Tags","summary":"","title":"Treadmill","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/unity/","section":"Tags","summary":"","title":"Unity","type":"tags"},{"content":"","date":"19 September 2024","externalUrl":null,"permalink":"/tags/vr/","section":"Tags","summary":"","title":"VR","type":"tags"},{"content":"","date":"18 September 2024","externalUrl":null,"permalink":"/tags/c/c++/","section":"Tags","summary":"","title":"C/C++","type":"tags"},{"content":"","date":"18 September 2024","externalUrl":null,"permalink":"/tags/dx11/","section":"Tags","summary":"","title":"DX11","type":"tags"},{"content":"","date":"18 September 2024","externalUrl":null,"permalink":"/tags/rendering/","section":"Tags","summary":"","title":"Rendering","type":"tags"},{"content":"I am a recent Computer Science graduate with a strong interest in real-time rendering. Throughout my studies, I’ve been captivated by the technical and creative aspects of computer graphics, particularly in real-time applications like gaming and interactive simulations.\nMy academic journey has been diverse, beginning with my Bachelor\u0026rsquo;s degree in IoT, Big Data \u0026amp; Web, where I focused on robotics and automation. My thesis, titled \u0026ldquo;Automated use of underwater ROVs for seabed exploration and object recognition,\u0026rdquo; gave me valuable experience in developing autonomous systems and object recognition technologies.\nAs I pursued my Master\u0026rsquo;s degree in Computer Science, my focus shifted towards computer graphics and real-time rendering. My thesis, \u0026ldquo;Simulation of translucency in real-time using dynamic sampling based on local contrast,\u0026rdquo; allowed me to explore advanced techniques for simulating translucency, particularly through subsurface scattering. I also gained hands-on experience working with DirectX11, further deepening my understanding of real-time rendering.\nNow, I’m excited to apply what I’ve learned to real-world projects, continually improving and contributing to projects that push the boundaries of visual realism.\nYou can find my CV here.\n","date":"18 September 2024","externalUrl":null,"permalink":"/about/","section":"Nagard98","summary":"","title":"About Me","type":"page"},{"content":"","date":"18 September 2024","externalUrl":null,"permalink":"/projects/","section":"Projects","summary":"","title":"Projects","type":"projects"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]